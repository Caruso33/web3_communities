type OwnershipTransferred @entity {
  id: ID!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
}

# Not-autogenerated

type Counter @entity {
  id: ID!
  count: Int!
}

# type Categories @entity {
#   id: String!
#   categories: [Category!]! @derivedFrom(field: "categories")
# }

# type Category @entity {
#   id: Bytes!
#   name: String!
#   # categories: Categories!
# }

type Post @entity {
  id: ID!
  author: Bytes! # address
  title: String! # string
  hash: String! # string
  content: String! # string
  categoryIndex: BigInt! # uint256
  published: Boolean! # bool
  createdAt: BigInt! # uint256
  lastUpdatedAt: BigInt # uint256
}

type Comment @entity {
  id: ID!
  author: Bytes! # address
  postId: String! # string
  hash: String! # string
  content: String! # string
  createdAt: BigInt! # uint256
  lastUpdatedAt: BigInt # uint256
  deletedAt: BigInt # uint256
}

type _Schema_
  @fulltext(
    name: "postTitleSearch"
    language: en
    algorithm: rank
    include: [{ entity: "Post", fields: [{ name: "title" }] }]
  )
  @fulltext(
    name: "postSearch"
    language: en
    algorithm: rank
    include: [{ entity: "Post", fields: [{ name: "title", name: "content" }] }]
  )
  @fulltext(
    name: "commentSearch"
    language: en
    algorithm: rank
    include: [{ entity: "Comment", fields: [{ name: "content" }] }]
  )
