/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Community, CommunityInterface } from "../../contracts/Community";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_communityName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Community__DuplicateCategory",
    type: "error",
  },
  {
    inputs: [],
    name: "Community__PostIdNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "Community__onlyCommentAuthor",
    type: "error",
  },
  {
    inputs: [],
    name: "Community__onlyPostAuthor",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "CommentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deletedAt",
        type: "uint256",
      },
    ],
    name: "CommentDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastUpdatedAt",
        type: "uint256",
      },
    ],
    name: "CommentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "categoryIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "PostCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "categoryIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "published",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastUpdatedAt",
        type: "uint256",
      },
    ],
    name: "PostUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "communityName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "createCategory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "createComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "categoryIndex",
        type: "uint256",
      },
    ],
    name: "createPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
    ],
    name: "deleteComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchCategories",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "fetchCommentsOfPost",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "hash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct Community.Comment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "fetchPostByHash",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "hash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "categoryIndex",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "published",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct Community.Post",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "fetchPostById",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "hash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "categoryIndex",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "published",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct Community.Post",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchPosts",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "hash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "categoryIndex",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "published",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct Community.Post[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "updateComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_communityName",
        type: "string",
      },
    ],
    name: "updateName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "categoryIndex",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "published",
        type: "bool",
      },
    ],
    name: "updatePost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052600160a0818152601560f91b60c0526080908152620000279160089190620001f7565b503480156200003557600080fd5b50604051620028013803806200280183398101604081905262000058916200042d565b82826200006533620000bf565b81516200007a9060049060208501906200025b565b508051620000909060059060208401906200025b565b50508451620000a8915060069060208701906200025b565b50620000b533826200010f565b5050505062000529565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166200016a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600360008282546200017e9190620004c6565b90915550506001600160a01b03821660009081526001602052604081208054839290620001ad908490620004c6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b82805482825590600052602060002090810192821562000249579160200282015b82811115620002495782518051620002389184916020909101906200025b565b509160200191906001019062000218565b5062000257929150620002e6565b5090565b8280546200026990620004ed565b90600052602060002090601f0160209004810192826200028d5760008555620002d8565b82601f10620002a857805160ff1916838001178555620002d8565b82800160010185558215620002d8579182015b82811115620002d8578251825591602001919060010190620002bb565b506200025792915062000307565b8082111562000257576000620002fd82826200031e565b50600101620002e6565b5b8082111562000257576000815560010162000308565b5080546200032c90620004ed565b6000825580601f106200033d575050565b601f0160209004906000526020600020908101906200035d919062000307565b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200038857600080fd5b81516001600160401b0380821115620003a557620003a562000360565b604051601f8301601f19908116603f01168101908282118183101715620003d057620003d062000360565b81604052838152602092508683858801011115620003ed57600080fd5b600091505b83821015620004115785820183015181830184015290820190620003f2565b83821115620004235760008385830101525b9695505050505050565b600080600080608085870312156200044457600080fd5b84516001600160401b03808211156200045c57600080fd5b6200046a8883890162000376565b955060208701519150808211156200048157600080fd5b6200048f8883890162000376565b94506040870151915080821115620004a657600080fd5b50620004b58782880162000376565b606096909601519497939650505050565b60008219821115620004e857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200050257607f821691505b6020821081036200052357634e487b7160e01b600052602260045260246000fd5b50919050565b6122c880620005396000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c806306fdde031461014e578063095ea7b31461016c5780630de848ea1461018f578063121253e7146101a457806318160ddd146101b957806323b872dd146101cb578063313ce567146101de57806331a4bcb5146101ed578063395093511461020057806340a17985146102135780636fa30ad71461022657806370a0823114610246578063715018a61461026f578063742d931a1461027757806384da92a71461028a5780638da5cb5b1461029d57806395d89b41146102bd578063a457c2d7146102c5578063a9059cbb146102d8578063abaddd7f146102eb578063b1184aea14610300578063c6d572ae14610320578063dc29868214610328578063dd62ed3e1461033b578063f2fde38b1461034e578063f34a5c4014610361578063f73e864b14610374575b600080fd5b610156610387565b6040516101639190611ad0565b60405180910390f35b61017f61017a366004611b06565b610419565b6040519015158152602001610163565b610197610431565b6040516101639190611b30565b6101b76101b2366004611c34565b61050a565b005b6003545b604051908152602001610163565b61017f6101d9366004611c83565b610615565b60405160128152602001610163565b6101b76101fb366004611cbf565b610639565b61017f61020e366004611b06565b6106ee565b6101b7610221366004611ce1565b610710565b610239610234366004611d27565b61083f565b6040516101639190611dc3565b6101bd610254366004611dd6565b6001600160a01b031660009081526001602052604090205490565b6101b76109da565b6101b7610285366004611df1565b6109ee565b6101b7610298366004611e5d565b610b8b565b6102a5610baa565b6040516001600160a01b039091168152602001610163565b610156610bb9565b61017f6102d3366004611b06565b610bc8565b61017f6102e6366004611b06565b610c48565b6102f3610c56565b6040516101639190611e99565b61031361030e366004611d27565b610ea1565b6040516101639190611eee565b610156610fdd565b6101b7610336366004611e5d565b61106b565b6101bd610349366004611f9a565b61115e565b6101b761035c366004611dd6565b611189565b61023961036f366004611e5d565b611202565b6101b7610382366004611fcd565b611260565b6060600480546103969061205d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c29061205d565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050505050905090565b6000336104278185856114c7565b5060019392505050565b60606008805480602002602001604051908101604052809291908181526020016000905b828210156105015783829060005260206000200180546104749061205d565b80601f01602080910402602001604051908101604052809291908181526020018280546104a09061205d565b80156104ed5780601f106104c2576101008083540402835291602001916104ed565b820191906000526020600020905b8154815290600101906020018083116104d057829003601f168201915b505050505081526020019060010190610455565b50505050905090565b6000838152600b602052604081208054859285929182908490811061053157610531612097565b6000918252602090912060069091020180549091506001600160a01b0316331461056e5760405163b4dac27560e01b815260040160405180910390fd5b6000878152600b60205260408120805490919082908990811061059357610593612097565b90600052602060002090600602019050868160030190805190602001906105bb9291906118da565b504260058201819055600482015460405133928c927f24b602c1dc276c94de75356e39c9b114d81bc4a0f83636a12fcc61a9544569f092610602928e928e929091906120ad565b60405180910390a3505050505050505050565b6000336106238582856115e3565b61062e85858561165d565b506001949350505050565b61064161182b565b6000828152600b60205260409020805481908390811061066357610663612097565b60009182526020822060069091020180546001600160a01b031916815560018101829055600281018290559061069c600383018261195e565b5060006004820181905560059091015560408051838152426020820152339185917f36822d4f8a7db6d2025f5f62598c110298aa4263c9b10602eec73b60fc0a48bd91015b60405180910390a3505050565b600033610427818585610701838361115e565b61070b91906120ef565b6114c7565b600082815260096020526040902080546001600160a01b031661074557604051621d14db60e41b815260040160405180910390fd5b6000838152600b60209081526040808320815160c081018352338152815481850181815293820189815260608301898152426080850181905260a08501526001808401865585895297879020845160069094020180546001600160a01b0319166001600160a01b039094169390931783559451968201969096559451600286015591518051919492938493926107e192600385019201906118da565b506080820151600482015560a0909101516005909101558154604051339187917f1ff8a0ea47ebe1f150876665e93f1c20b8cd96fd37cda28cb14e3f17a16f4d83916108309189904290612107565b60405180910390a35050505050565b610847611998565b60008281526009602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101805492939192918401916108929061205d565b80601f01602080910402602001604051908101604052809291908181526020018280546108be9061205d565b801561090b5780601f106108e05761010080835404028352916020019161090b565b820191906000526020600020905b8154815290600101906020018083116108ee57829003601f168201915b505050505081526020016003820180546109249061205d565b80601f01602080910402602001604051908101604052809291908181526020018280546109509061205d565b801561099d5780601f106109725761010080835404028352916020019161099d565b820191906000526020600020905b81548152906001019060200180831161098057829003601f168201915b505050918352505060048201546020820152600582015460ff16151560408201526006820154606082015260079091015460809091015292915050565b6109e261182b565b6109ec600061188a565b565b6109fc600780546001019055565b6000610a0760075490565b600081815260096020908152604090912080546001600160a01b0319163317815560018101839055865192935091610a47916002840191908801906118da565b508351610a5d90600383019060208701906118da565b506004810183905560058101805460ff19166001179055426006820181905560078201556040518190600a90610a94908790612130565b908152604051908190036020019020815481546001600160a01b0319166001600160a01b03909116178155600180830154908201556002808301805491830191610add9061205d565b610ae89291906119e8565b506003820181600301908054610afd9061205d565b610b089291906119e8565b5060048281015490820155600580830154908201805460ff191660ff90921615159190911790556006808301549082015560079182015491015560405133907f5cf35cdd82b3f64bd006a20263bf79398bed734f7a24091966c410c161046a3d90610b7c908590899089908990429061214c565b60405180910390a25050505050565b610b9361182b565b8051610ba69060069060208401906118da565b5050565b6000546001600160a01b031690565b6060600580546103969061205d565b60003381610bd6828661115e565b905083811015610c3b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61062e82868684036114c7565b60003361042781858561165d565b60606000610c6360075490565b90506000816001600160401b03811115610c7f57610c7f611b92565b604051908082528060200260200182016040528015610cb857816020015b610ca5611998565b815260200190600190039081610c9d5790505b50905060005b82811015610e9a576000610cd38260016120ef565b60008181526009602090815260409182902082516101008101845281546001600160a01b031681526001820154928101929092526002810180549495509093919284929084019190610d249061205d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d509061205d565b8015610d9d5780601f10610d7257610100808354040283529160200191610d9d565b820191906000526020600020905b815481529060010190602001808311610d8057829003601f168201915b50505050508152602001600382018054610db69061205d565b80601f0160208091040260200160405190810160405280929190818152602001828054610de29061205d565b8015610e2f5780601f10610e0457610100808354040283529160200191610e2f565b820191906000526020600020905b815481529060010190602001808311610e1257829003601f168201915b505050918352505060048201546020820152600582015460ff1615156040820152600682015460608201526007909101546080909101528451859085908110610e7a57610e7a612097565b602002602001018190525050508080610e929061218c565b915050610cbe565b5092915050565b6000818152600b602090815260408083208054825181850281018501909352808352606094919384929084015b82821015610fd15760008481526020908190206040805160c0810182526006860290920180546001600160a01b03168352600181015493830193909352600283015490820152600382018054919291606084019190610f2c9061205d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f589061205d565b8015610fa55780601f10610f7a57610100808354040283529160200191610fa5565b820191906000526020600020905b815481529060010190602001808311610f8857829003601f168201915b505050505081526020016004820154815260200160058201548152505081526020019060010190610ece565b50505050915050919050565b60068054610fea9061205d565b80601f01602080910402602001604051908101604052809291908181526020018280546110169061205d565b80156110635780601f1061103857610100808354040283529160200191611063565b820191906000526020600020905b81548152906001019060200180831161104657829003601f168201915b505050505081565b61107361182b565b60005b60085481101561111a57816040516020016110919190612130565b60405160208183030381529060405280519060200120600882815481106110ba576110ba612097565b906000526020600020016040516020016110d491906121a5565b6040516020818303038152906040528051906020012003611108576040516388c6e00f60e01b815260040160405180910390fd5b806111128161218c565b915050611076565b50600880546001810182556000919091528151610ba6917ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3019060208401906118da565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61119161182b565b6001600160a01b0381166111f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c32565b6111ff8161188a565b50565b61120a611998565b600a8260405161121a9190612130565b9081526040805191829003602090810183206101008401835280546001600160a01b0316845260018101549184019190915260028101805491928401916108929061205d565b600085815260096020526040902080548691906001600160a01b0316331461129b57604051630284663360e31b815260040160405180910390fd5b6000878152600960209081526040909120875190916112c19160028401918a01906118da565b5085516112d790600383019060208901906118da565b506004810185905560058101805485151560ff199091161790554260078201556000888152600960205260409020815481546001600160a01b0319166001600160a01b039091161781556001808301549082015560028083018054849392830191906113429061205d565b61134d9291906119e8565b5060038201816003019080546113629061205d565b61136d9291906119e8565b5060048281015490820155600580830154908201805460ff191660ff9092161515919091179055600680830154908201556007918201549101556040518190600a906113ba908990612130565b908152604051908190036020019020815481546001600160a01b0319166001600160a01b039091161781556001808301549082015560028083018054918301916114039061205d565b61140e9291906119e8565b5060038201816003019080546114239061205d565b61142e9291906119e8565b5060048281015490820155600580830154908201805460ff191660ff909216151591909117905560068083015481830155600792830154918301919091556001830154908301549183015460405133937fe2337982860926fbfe2cc8754182c5623c713abeace29eb28b0ff9557369ef9a936114b59390928d928d928d928d929190612240565b60405180910390a25050505050505050565b6001600160a01b0383166115295760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610c32565b6001600160a01b03821661158a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610c32565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591016106e1565b60006115ef848461115e565b90506000198114611657578181101561164a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610c32565b61165784848484036114c7565b50505050565b6001600160a01b0383166116c15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610c32565b6001600160a01b0382166117235760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610c32565b6001600160a01b0383166000908152600160205260409020548181101561179b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610c32565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906117d29084906120ef565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161181e91815260200190565b60405180910390a3611657565b33611834610baa565b6001600160a01b0316146109ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c32565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546118e69061205d565b90600052602060002090601f016020900481019282611908576000855561194e565b82601f1061192157805160ff191683800117855561194e565b8280016001018555821561194e579182015b8281111561194e578251825591602001919060010190611933565b5061195a929150611a63565b5090565b50805461196a9061205d565b6000825580601f1061197a575050565b601f0160209004906000526020600020908101906111ff9190611a63565b60405180610100016040528060006001600160a01b031681526020016000815260200160608152602001606081526020016000815260200160001515815260200160008152602001600081525090565b8280546119f49061205d565b90600052602060002090601f016020900481019282611a16576000855561194e565b82601f10611a27578054855561194e565b8280016001018555821561194e57600052602060002091601f016020900482015b8281111561194e578254825591600101919060010190611a48565b5b8082111561195a5760008155600101611a64565b60005b83811015611a93578181015183820152602001611a7b565b838111156116575750506000910152565b60008151808452611abc816020860160208601611a78565b601f01601f19169290920160200192915050565b602081526000611ae36020830184611aa4565b9392505050565b80356001600160a01b0381168114611b0157600080fd5b919050565b60008060408385031215611b1957600080fd5b611b2283611aea565b946020939093013593505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b8557603f19888603018452611b73858351611aa4565b94509285019290850190600101611b57565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611bb957600080fd5b81356001600160401b0380821115611bd357611bd3611b92565b604051601f8301601f19908116603f01168101908282118183101715611bfb57611bfb611b92565b81604052838152866020858801011115611c1457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611c4957600080fd5b833592506020840135915060408401356001600160401b03811115611c6d57600080fd5b611c7986828701611ba8565b9150509250925092565b600080600060608486031215611c9857600080fd5b611ca184611aea565b9250611caf60208501611aea565b9150604084013590509250925092565b60008060408385031215611cd257600080fd5b50508035926020909101359150565b60008060408385031215611cf457600080fd5b8235915060208301356001600160401b03811115611d1157600080fd5b611d1d85828601611ba8565b9150509250929050565b600060208284031215611d3957600080fd5b5035919050565b600061010060018060a01b038351168452602083015160208501526040830151816040860152611d7282860182611aa4565b91505060608301518482036060860152611d8c8282611aa4565b9150506080830151608085015260a0830151151560a085015260c083015160c085015260e083015160e08501528091505092915050565b602081526000611ae36020830184611d40565b600060208284031215611de857600080fd5b611ae382611aea565b600080600060608486031215611e0657600080fd5b83356001600160401b0380821115611e1d57600080fd5b611e2987838801611ba8565b94506020860135915080821115611e3f57600080fd5b50611e4c86828701611ba8565b925050604084013590509250925092565b600060208284031215611e6f57600080fd5b81356001600160401b03811115611e8557600080fd5b611e9184828501611ba8565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b8557603f19888603018452611edc858351611d40565b94509285019290850190600101611ec0565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611f8c57888303603f19018552815180516001600160a01b031684528781015188850152868101518785015260608082015160c08287018190529190611f6183880182611aa4565b6080858101519089015260a09485015194909701939093525050509386019390860190600101611f15565b509098975050505050505050565b60008060408385031215611fad57600080fd5b611fb683611aea565b9150611fc460208401611aea565b90509250929050565b600080600080600060a08688031215611fe557600080fd5b8535945060208601356001600160401b038082111561200357600080fd5b61200f89838a01611ba8565b9550604088013591508082111561202557600080fd5b5061203288828901611ba8565b935050606086013591506080860135801515811461204f57600080fd5b809150509295509295909350565b600181811c9082168061207157607f821691505b60208210810361209157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b8481526080602082015260006120c66080830186611aa4565b6040830194909452506060015292915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612102576121026120d9565b500190565b8381526060602082015260006121206060830185611aa4565b9050826040830152949350505050565b60008251612142818460208701611a78565b9190910192915050565b85815260a06020820152600061216560a0830187611aa4565b82810360408401526121778187611aa4565b60608401959095525050608001529392505050565b60006001820161219e5761219e6120d9565b5060010190565b600080835481600182811c9150808316806121c157607f831692505b602080841082036121e057634e487b7160e01b86526022600452602486fd5b8180156121f4576001811461220557612232565b60ff19861689528489019650612232565b60008a81526020902060005b8681101561222a5781548b820152908501908301612211565b505084890196505b509498975050505050505050565b87815260e06020820152600061225960e0830189611aa4565b828103604084015261226b8189611aa4565b60608401979097525050921515608084015260a083019190915260c090910152939250505056fea2646970667358221220a7e20a7c40a7466785bb0ea823d7ac63a57ae13620593d7f72cec0859229205864736f6c634300080e0033";

type CommunityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommunityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Community__factory extends ContractFactory {
  constructor(...args: CommunityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _communityName: PromiseOrValue<string>,
    _tokenName: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Community> {
    return super.deploy(
      _communityName,
      _tokenName,
      _symbol,
      _initialSupply,
      overrides || {}
    ) as Promise<Community>;
  }
  override getDeployTransaction(
    _communityName: PromiseOrValue<string>,
    _tokenName: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _communityName,
      _tokenName,
      _symbol,
      _initialSupply,
      overrides || {}
    );
  }
  override attach(address: string): Community {
    return super.attach(address) as Community;
  }
  override connect(signer: Signer): Community__factory {
    return super.connect(signer) as Community__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommunityInterface {
    return new utils.Interface(_abi) as CommunityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Community {
    return new Contract(address, _abi, signerOrProvider) as Community;
  }
}
